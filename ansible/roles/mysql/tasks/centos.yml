- name: Add Mysql repository
  yum: name=http://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm
  tags: [mysql]

# - name: Add Percona Server Mysql repository
#   yum: name=http://www.percona.com/downloads/percona-release/redhat/0.1-4/percona-release-0.1-4.noarch.rpm  
#   tags: [mysql]


- name: Install Mysql RPM dependencies
  become: true
  yum: name={{ item }} state=present
  with_items:
    - net-tools
    - vim
    - telnet
    - lsof
    - python-pip
    - python-virtualenv
    - mysql-community-common
    - mysql-community-libs
    - mysql-community-client
    - mysql-community-libs-compat
    - mysql-community-server 
    - mysql-community-devel
    - perl-DBD-MySQL
    - gcc
    - sshpass
  notify: restart mysql
  tags: [mysql]

# - name: Install Percona Mysql RPM dependencies
#   become: true
#   yum: name={{ item }} state=present
#   with_items:
#     - net-tools
#     - vim
#     - telnet
#     - lsof
#     - python-pip
#     - python-virtualenv
#     - Percona-Server-server-57
#     - Percona-Server-client-57
#     - Percona-Server-shared-57
#     - Percona-Server-devel-57
#     - perl-DBD-MySQL
#     - gcc
#     - sshpass
#   tags: [mysql]

- name:  update pip
  become: true
  pip:  
    name: pip
    state: latest
  ignore_errors: yes
  tags: [mysql]

- name:  pip  install MySQL-python
  become: true
  pip:
    name:  MySQL-python
  ignore_errors: yes
  tags: [mysql]


# - name: Copy my.cnf to master
#   copy: src="roles/dbtier/files/my.cnf.master" dest="/etc/percona-server.conf.d/mysqld.cnf" owner=root group=root mode=0644
#   when: hostname.stdout.find('db-master') == 0
 
# - name: Copy my.cnf to slave
#   copy: src="roles/dbtier/files/my.cnf.slave" dest="/etc/percona-server.conf.d/mysqld.cnf" owner=root group=root mode=0644
#   when: hostname.stdout.find('db-slave') == 0

- name: Get percona server password
  shell: cat /var/log/mysqld.log | grep "temporary password" | awk '{print $11}'
  register: mysql_temp_pass
  tags: [mysql]


- name: Copy .my.cnf file
  template: 
    src: temp_my.cnf.j2 
    dest: /root/.my.cnf
    owner: root 
    group: root 
    mode: 0644
  tags: [mysql]

- name: whoami 
  become: false
  shell: whoami
  register: linux_user
  tags: [mysql]

- name: id -g -n
  become: false
  shell: id -g -n
  register: linux_group
  tags: [mysql]

# https://www.rennetti.com/howto/139/mysql-5-7-on-ansible  
- name: Set new password from temporary password
  shell: 'mysql -e "SET PASSWORD = PASSWORD(''{{ mysql_root_pass }}'');" --connect-expired-password -uroot -p"{{ mysql_temp_pass.stdout }}"'
  ignore_errors: True
  tags: [mysql]

- name: "MySQL: template: .my.cnf file to /home/{{ linux_user.stdout }}"
  become: false
  template:
    src: temp_my.cnf.j2
    dest: "~/.my.cnf"
    owner: "{{ linux_user.stdout }}"
    group: "{{ linux_group.stdout }}"
    mode: 0600
  tags: [mysql]


- name: Set root password
  become: false
  mysql_user: 
      name: root
      password: "{{ mysql_root_pass }}"
      priv: '*.*:ALL,GRANT'      
      state: present
      host: "{{ item }}"
      sql_log_bin: no
  with_items:
     - "{{ ansible_hostname }}"
     - 127.0.0.1
     - ::1
     - localhost
     - '%'
  tags: [mysql]

- name: create variable (1)
  set_fact:  
      looseGroupReplicationLocalAddress: "{{ host_ip }}:24901"
 # generated_server_id: "{{ 100 | random }}"     
      count: 1
  tags: [mysql]

- name: craet generated_server_id
  shell: hostname
  register: generated_server_id
  tags: [mysql]

# - name: create variable  (2)
#   set_fact:  
#     order_number: 1
#   when:  hostvars[groups['mysql'][0]]['order_number'] is not   defined     
#   tags: [mysql]

# - name: create variable  (2)
#   set_fact:  
#       order_number: "{{ 1 + hostvars[groups['mysql'][0]]['order_number'] }}"
#   when:  hostvars[groups['mysql'][0]]['order_number'] is    defined     
#   tags: [mysql]


# - name: display orderNumber 
#   debug:
#     msg: "orderNumber --  {{ order_number }} " 
#   tags: [mysql]


- name: display generated_id 
  debug:
    msg: "test --  {{ looseGroupReplicationLocalAddress }} ---{{ group_seeds }}-- {{ generated_server_id.stdout }}  " 
  tags: [mysql]



- name: MySQL- my.cnf file to /etc/my.cnf"
  template:
    src: new_my.cnf.j2
    dest: /etc/my.cnf
    owner: "{{ linux_user.stdout }}"
    group: "{{ linux_group.stdout }}"
    mode: 0600
  notify: restart mysql
  tags: [mysql] 